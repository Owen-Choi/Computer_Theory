소켓 프로그래밍 : 

	언어별로 네트워크 프로그래밍을 위한 라이브러리 API가 있는데 이것들이 모두 소켓으로 동일하다.
	그래서 네트워크 프로그래밍을 소켓 프로그래밍이라고 부른다. 

	소켓은 OS에 의해 관리된다. 운영체제에서 관리되는 인터페이스 개념이라고 생각하면 된다.
	어플리케이션이 만약 파일을 건드린다면 직접 파일을 건드리는게 아니라 운영체제에게 요청을 해서
	하는 것 처럼 소켓과 네트워킹도 마찬가지이다. 응용 프로그램이 운영체제에게 요청을 하는 것.

	소켓은 특정 포트 번호와 연결되어있음.
	하나의 소켓은 다른 소켓과는 중첩되지 않는 고유한 포트번호를 이용해서 운영체제가 관리하게 된다.
	
	(네트워크 기능을 수행하는 네트워크 장비? 를 호스트라고 부른다.)
	IP 주소는 소켓이 찾아올 수 있는 주소. 

	클라이언트 소켓을
	IP 주소를 갖는 호스트까지 전달해주는건 네트워크가 해주는 것, 포트넘버를 찾는 건 운영체제가 하는 것.

	
	서버에서 TCP 소켓을 만드는 건(서버소켓) TCP connection을 맺기 위한 것이다.
	포트를 부여한 뒤 기다림. 즉 listen 소켓으로서 클라이언트와 connection을 맺기 위함.
	
	(꿀팁) 
	127.0.0.1 은 특별한 용도의 IP인데, mySelf라는 뜻이다. (local host)
		==> 그래서 실행이 됐구나. 
		==> 255.255.255.255 : broadcast : 모두 다 받아라
	Socket clientSocket = serverSocket.accpet();
	==> listen socket이 clientSocket을 물어오고, 앞으로 데이터 통신은 이 clientSocket으로 이루어짐
	