OODB:
	정의 : 
		객체 지향 패러다임을 사용하는 객체 지향 프로그래밍 언어에서 영향을 받아 생성된
		객체 지향 기술과 데이터베이스 기술의 결합체

	등장 배경 : 
		컴퓨터 응용 분야의 확대, 관계형 DBMS 등과 같은 기존 DBMS들의 한계

	특징 : 
		1. 계층(Class)에 따라 데이터 구조를 표현하고 데이터와 그 조작 절차를 함께 다룬다.
		이와 더불어 계승 가능한 구조를 지원한다. 
		즉 객체지향의 특징인 계층(class)과 상 하위  계층간의 관계(inheritance Hierarchy)
		를 가진다. 

		2. 객체의 기본 특성을 지원하기 위해 객체 지향 데이터베이스만의 패러다임 보유
		패러다임 :
			복합 객체, 객체 식별자, 타입 및 클래스, 캡슐화, 상속성, 다형성,
			확장성, 오버로딩, 타입 검증 / 추론 등

			객체와 객체 식별자 : 
				객체는 사람, 학생, 교수 등 실세계의 개체를 추상적으로 표현한 것.
				객체 식별자는 많은 수의 객체들을 하나하나 유일하게 식별하기
				위해 시스템에 의해 생성되는 값, 임의로 변경할 수 없음

	장/단점 : 

		장점 : 
		단점 : 
			기본적인 데이터베이스 기능(트랜잭션 처리, 동시 처리 가능한 사용자 수, 에러 복구
			와 백업 기능 등)에서 관계형 데이터베이스에 훨씬 미치지 못함.

		
ORDB: 

	
	등장 배경 : 
		컴퓨터가 발전하면서 비정형화된 데이터(멀티미디어,웹 문서, CAD/CAM)의 사용이 빈번해졌고, 
		이러한 비정형화된 데이터는 관계형 데이터베이스에 저장하기 어렵다는 단점이 있다. 
		이러한 문제를 보완하기 위해 객체 관계 데이터베이스가 등장했다.

	특징 : 
		사용자 정의 타입, 참조 타입, 중첩된 테이블(하위 쿼리와 비슷한 개념) 지원, 
		대단위 객체 타입 지원(LOB : Large OBject)
		질의 언어로 SQL 확장을 사용한다.(Extensions in SQL)

	장/단점 : 
		장점 : 
		단점 : 
		



	
	