테이블을 분해하지 않고 하나의 거대한 덩어리로서 사용한다면 여러가지 이상현상(anomalies)들이 발생할 수 있다.
이것이 우리가 테이블을 분해하고, 각각의 테이블에서 어떤 값을 참조한다면 이러한 이상현상들을 방지할 수 있다.



+-----+--------+------------+-----------------+--------------+------------+
| ID  | name   | dept       | address         | course_name  | location   |
+-----+--------+------------+-----------------+--------------+------------+
| 401 | 김연아 | 체육학과   | 대한민국 서울   | 데이터베이스 | 공학관 110 |
| 402 | 장미란 | 체육학과   | 대한민국 강원도 | 스포츠경영학 | 체육관 103 |
| 501 | 박지성 | 컴퓨터학과 | 영국 맨체스터   | 데이터베이스 | 공학관 110 |
| 502 | 추신수 | 컴퓨터과   | 미국 클리블랜드 | 자료구조     | 공학관 111 |
+-----+--------+------------+-----------------+--------------+------------+
table anomalies in book_exercise database

위에서 보면 장미란 학생은 유일하게 체육관 103을 사용하는데, 여기서 장미란 학생을 제거하면 체육관 103도 함께 사라져서 
다른 학생들이 체육관 103을 사용하지 못하게 된다.

이상현상의 종류는 다음과 같다.	
	1. 삭제이상 : 위에서 예시를 이미 들었다. 연쇄삭제(triggered deletion)문제와 연관된다.
	2. 삽입이상 : 튜플을 삽입하는 경우에 해당하는 정보가 없어 NULL을 넣는 현상
	3. 수정이상 : 어떤 값을 참조하는 튜플의 값을 수정할 떄 같은 데이터를 참조하는 다른 튜플과 데이터가 달라지는 현상
		==> 데이터 불일치
			==> 위에서 박지성 학생과 김연아 학생은 같은 공학관에서 데이터베이스 수업을 듣지만
			박지성학생의 강의실이 만약 201호로 바뀌게 된다고 해도 두 강의는 (서로 종속적이어야 하지만)
			독립적으로 입력된 데이터이기 때문에 김연아 학생의 강의실은 변경되지 않고,
			그 결과 같은 호에서 들어야 할 수업이 다르게 나타나게 된다.

함수 종속성 FD

	위 릴레이션에서 학생번호는 학생의 이름을 결정한다. 즉 학생번호의 값을 알면 학생이름의 값이 유일하게 정해지는 것인데,
	이것을 학생 이름은 학생 번호에 종속한다고 하고, 학생번호 -> 학생 이름 으로 나타낸다.
	예를 들어 생일과 나이 필드가 있다면 생일 -> 나이가 성립한다. 생일을 알고있다면 나이에 대한 필드를 참조하지 않거나
	아예 유지하지 않아도 알 수 있기 떄문.
	여기서 왼쪽에 있는 값을 결정자, 오른쪽에 있는 값을 종속자라고 한다. 
	
릴레이션과 결정자

	★이상현상은 두 개 이상의 속성을 포함하며 기본키가 아닌 속성이 릴레이션의 결정자일 때 발생하게 된다.

무손실 분해
	
	정의는 테이블 R의 분해 테이블 R1과 R2가 있을 때, 이 둘을 다시 조인하면 튜플의 손실 없이 다시 R이 만들어지는 경우
	

제 1 정규형 (1NF)

	모든 속성의 도메인이 오직 원자값으로만 되어있는 정규형
	Domain : 하나의 속성이 갖는 값들의 집합
	즉 취미라는 Attribute의 도메인은 영화, 음악, 게임 등이 될 수 있다.
	이 1형을 만족해야 관계형 데이터베이스의 릴레이션이 될 자격이 생긴다.
		