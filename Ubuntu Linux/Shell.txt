Shell은 명령어 해석기, 프로그래밍, 사용자 환경 설정 등의 기능을 한다.
셸의 종류로는 Bourne shell, C shell, Korn shell, bash shell, dash shell 등이 존재한다.
리눅스의 버전과 종류마다 기본으로 사용하는 셸이 다른데, 이는 터미널에서 명령대기의 끝에 무슨 특수문자가 있는지로 구분할 수 있다.
	$ : 본, 배시, 콘
	% : C

셸은 자체적으로 내장 명령을 가지고 있다고 한다.
이런 내장 명령들은 별도의 실행 파일이 없고 셸 안에 포함된다.

bash shell의 출력 명령어 :
	echo, printf : 화면 출력
		ㄴ 군대에서 상대측 서버의 신호를 확인하기 위해 이러한 계열의 명령어를 쓰는걸 본 기억이 난다.
 
셸 명령어에서 특수문자도 다양하게 활용된다.
	* : "전체"의 의미를 가진다. git bash에서 add * 을 쓰는 것을 연상하면 좋다.
		ls * : 현재 디렉토리의 모든 파일과 서브 디렉토리를 나열한다.
		cp * /tmp : 현재 디렉토리의 모든 파일을 /tmp 디렉토리 아래로 복사한다.
		ls -F t* : t, tmp, temp 와 같이 t로 시작하는 모든 파일의 이름과 파일 종류(-F)를 출력한다.
		cp *.txt ../ ch3 : 확장자가 txt인 모든 파일을 상위 디렉토리 아래의 ch3 디렉토리에 복사한다.
		ls -l h*d : h로 시작하고 d로 끝나는 모든 파일의 상세정보(-l)를 출력한다. mysql의 %와 같은 역할이라고 아해하자.
	
	? : 길이가 1인 임의의 한 문자를 의미힌다.
		ls t?.txt : t 다음에 임의의 한 문자로 이름이 이루어지고, 확장자가 txt인 모든 파일을 출력한다.

	[] : 괄호 안의 수 중 하나로 이루어져야함을 의미한다.
		ls -l tmp[135].txt : tmp다음에 1, 3, 5 중에 하나가 오고 확장자가 txt인 모든 파일을 출력한다.
		ls [A-Za-z]*[0-9] : 파일명이 영문자로 시작하고 숫자로 끝나는 모든 파일의 목록을 출력한다.
		
	~ 와 - : 디렉토리를 나타내는 특수문자
		cp *.txt ~/ch3 : 확장자가 txt인 모든 파일을 현재 작업 중인 사용자의 홈 디렉토리 아래 tmp(ch3 아니고?) 디렉토리로 복사한다.
		cp ~user2/linux.txt : user2라는 사용자의 홈 디렉토리 아래에서 linux.txt 파일을 찾아 현재 디렉토리로 복사한다.
			ㄴ 아마 cp 다음에 디렉토리를 따로 표시하지 않아서 홈디렉토리로 설정이 되는 것 같다.
		cd - : 이전 작업 디렉토리로 돌아간다.

	; 와 | : 명령과 명령을 연결한다.
		; : 연결된 명령을 왼쪽부터 차례대로 실행
		| : 왼쪽 명령의 실행 결과를 오른쪽 명령으로 전달
		date; ls; pwd :  차례대로 날짜를 출력한 후 현재 디렉토리의 파일 목록을 출력하고, 마지막으로 현재 작업 디렉토리의
			절대 경로를 보여준다.
		ls -al / | more : 루트 디렉토리에 있는 모든 파일(-a)의 상세 정보(-l)을 한 화면씩 출력한다. ls -al / 명령의 결과가
			more 명령의 입력으로 전달되어 페이지 단위로 출력되는 것.

	' ' 와 " " : 문자열의 처리에 대한 것이다.
		echo '$SHELL' : 화면에 문자열 $SHELL을 출력한다.
		echo "$SHELL" : 셸의 환경 변수인 SHELL에 저장된 값인, 현재 셸의 종류가 화면에 출력된다.
			즉 ' '는 문자를 감싸서 문자열로 만들어주고 안의 특수문자의 기능을 없앤다.
			" "는  $, ``, \을 제외한 모든 특수문자를 일반 문자로 간주하여 처리한다.
	` ` : 문자열 안에서 명령을 처리할 때 사용한다.
		echo `` Today is ` date``` : ` date`가 명령으로 실행되며 해당 부분에 명령의 결과가 출력된다.

	\ : 특수문자 바로 앞에 사용되고 특수문자의 효과를 없애준다. mysql의 free 기능과 동일하다.
		echo -l t\* : 파일명이 t*인 모든 파일의 상세정보(-l)를 출력한다.

	>, <, >> : 입출력의 방향을 바꾸는 특수문자이다.
		ls -l > res : ls -l의 실행 결과를 화면이 아닌 res 파일에 저장한다.
	표준 입출력 장치는 키보드와 마우스, 모니터 등이다. 이것을 파일로 바꾸는 것을 redirection(리다이렉션)이라고 한다.
	출력 리다이렉션을 위한 명령어는 2개가 있다.
		> : 기존 파일의 내용을 삭제하고 새로 결과를 저장.
		>> : 기존 파일의 내용 뒤에 결과를 추가.
	파일 덮어쓰기는 > 명령어를 통해서 이루어진다.

	표준 오류 장치란 오류 메세지를 내보내는 장치를 뜻하는데, 이 오류 메세지도 리다이렉션할 수 있다.
	로그파일과 같이 중요하게 작용할 수도 있을 것 같다.
		표준 오류의 경우는 파일 디스크럽터 번호를 생략할 수 없다.
			파일 디스크럽터 번호 : 
				0. stdin : 명령의 표준 입력 
				1. stdout : 명령의 표준 출력
				2. stderr : 명령의 표준 오류
		2> : 표준 오류 메세지를 파일에 저장한다.
			ls /abc 2> ls.err :  /abc라는 파일이나 디렉토리가 없는 상황. 여기서 ls.err에 리다이렉션 했기 때문에
			파일에는 "ls: '/abc'에 접근할 수 없습니다: 그런 파일이나 디렉토리가 없습니다" 라는 메세지가 저장되게 된다.
	
	입력 리다이렉션을 위한 명령어는 < 이다.
		즉 파일의 내용을 입력으로서 받아와 화면에 출력한다.
		cat out1, cat < out1, cat 0< out1 모두 out1의 내용을 화면에 출력하는 기능을 한다. 