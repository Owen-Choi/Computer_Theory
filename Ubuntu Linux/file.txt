파일

	file : 파일의 종류를 알려준다.
		ex : file /etc/hosts temp
		==> etc/hosts : ASCII text
		       temp :         directory

ls -l 명령어를 사용하면 특정 양식을 가진 결과가 한줄에 출력되는데,
거기에는 파일 소유자의 ID와 파일 소유자의 그룹 이름이 포함된다.

	groups : 사용자가 속한 그룹을 알려준다.
	
ls-l 명령어의 출력 결과 중에 -rwxr-xr-x와 같은 문자열을 볼 수 있는데, 이는 접근 권한을 나타내는 것이다.
	- : (가장 첫 문자) 파일의 종류를 뜻한다. 하이픈(-)이라면 파일을, d 라면 디렉토리를 뜻한다.
	rwx : (앞 세글자) 파일 소유자의 권한. 이 경우 읽기, 쓰기의 권한을 가지고 있다.
	r-x : (가운데 세글자) 그룹의 권한. 이 경우 읽기, 실행의 권한을 가지고 있다.
	r-x : (마지막 세글자) 기타 사용자의 권한. 이 경우 마찬가지로 읽기, 실행의 권한을 가지고 있다.

chmod : 파일이나 디렉토리의 접근 권한을 변경한다.

	이 chmod에는 기호 모드와 숫자 모드가 있다.
		
		기호 모드 : 
			chmod [사용자 구분 문자] [기호 문자]  [접근 권한 문자] [파일명]  의 형식으로 이루어진다.
			ex : 
				[사용자 구분 문자] : 
					u : 파일 소유자
					g : 소유자가 속한 그룹
					o : 소유자와 그룹 이외의 기타 사용자
					a : 전체 사용자
				chmod u+w text.txt : text.txt 파일의 소유자(u)에게 쓰기(w) 권한을 부여(+)한다.
				chmod go-r text.txt : text.txt파일의 그룹(g)과 기타 사용자(o)에게 쓰기(w) 권한을 제거(-)한다.
		-숫자모드 생략-
	
	default 권한 (기본 접근 권한)
		일반 파일
			소유자 : 읽기, 쓰기
			그룹 사용자 : 읽기
			기타 사용자 : 읽기
		디렉토리
			소유자 : 읽기, 쓰기, 실행
			그룹 사용자 : 읽기, 실행
			기타 사용자 : 읽기, 실행
	
	기본 접근 권한 설정	
		umask : 기본 접근 권한을 출력하거나 변경한다.
			umask만 사용하면 현재 설정된 마스크 값을 확인할 수 있다.
			마스크 값이란?
				파일이나 디렉토리 생성 시 부여하지 않을 권한을 지정해놓은 값.
				022는 ----w--w- 로 그룹과 기타 사용자에게 쓰기 권한은 부여하지 않음을 의미한다.
				rw- 일 경우 이진법으로 110으로 나타내고, 이는 10진수로 6을 의미한다.
				즉 077의 경우 위의 방법에 따라 ---rwxrwx를 의미하고, 이는 곧 소유자 외에는
				어떤 사용자도 해당 파일이나 디렉토리에 접근할 수 없음을 의미한다.
			umask 077 : 마스크 값을 077, 즉  ----w--w-로 변경한다.
		핵심은 3비트로 끊어서 이진수로 계산하는 것. 그리고 이렇게 표현된 권한을 알아볼 수 있어야 하는 것.

	여기서 umask를 치면 세자리가 아니라 네자리가 나오는 것을 확인할 수 있다.
	가장 앞의 수 하나는 특수 접근 권한을 나타낸다.
	앞의 수가
		4일 경우 : setUID : 해당 파일을 실행하는 동안에는 파일 소유자의 권한을 가질 수 있게 설정한다.
			umask 4755 setup.exe 와 같은 형태로 사용할 수 있다.
			setUID가 적용된 경우 ls -l 명령어를 통해 권한을 확인해보면 -rwsr-xr-x와 같이 소유자의 실행 권한에 's'가 표시된다.
		2일 경우 : setGID : 해당 파일을 실행하는 동안에는 그룹의 권한을 가질 수 있게 설정한다.
			마찬가지로 umask 2755와 같이 설정한다.
		1의 경우 : sticky bit : 스티키 비트는 디렉토리에 설정한다.
			디렉토리에 스티키 비트가 설정되어 있으면, 해당 디렉토리는 모든 사용자가 파일을 생성할 수 있다.
			공유 파일 같은 느낌.